## 使用 docker 部署 prometheus

> 前期准备

* 编写配置文件```prometheus.yml```：
  
  ```bash
  # my global config
  global:
    scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
    evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
    # scrape_timeout is set to the global default (10s).

  # Alertmanager configuration
  alerting:
    alertmanagers:
      - static_configs:
          - targets:
            # - alertmanager:9093

  # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
  rule_files:
    # - "first_rules.yml"
    # - "second_rules.yml"

  # A scrape configuration containing exactly one endpoint to scrape:
  # Here it's Prometheus itself.
  scrape_configs:
    # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    - job_name: "prometheus"

      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.

      static_configs:
        - targets: ["localhost:9090"]

      # demo job
    -  job_name: 'consumer' # 作业名称
       metrics_path: '/exporter/prometheus' # 指标获取路径
       scrape_interval: 5s # 时间间隔
       basic_auth: # Spring Security basic auth 
         username: 'garden'
         password: 'garden520'
       static_configs:
       - targets: ['host.docker.internal:8763'] # 应用实例的地址，默认的协议是http
  ```

  [这里是官方配置文件模版](https://gitee.com/FSDGarden/learn-note/blob/master/prometheus/prometheus-latest.yml)

> 拉取镜像

  ```bash
  docker pull prom/prometheus:latest
  ```

> 运行容器

  ```bash
  docker run \
      --name prometheus-server \
      --restart=always \
      -d \
      -p 9090:9090 \
      -v /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \
      -v /data/prometheus/prometheus-data:/prometheus \
      prom/prometheus:latest --config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle
  ```
  
  命令行参数```--config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle```表示设置启动配置热更新。当配置文件修改后，可执行```curl -X POST http://${ip}:9090/-/reload```实现热更新。浏览器访问```prometheus```（```http://${ip}:9090```）校验是否运行成功
